<launch>
  <arg name="mav_name" default="ardrone"/>
  <arg name="world_name" default="APF_world"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find geometric_controller)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find geometric_controller)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find geometric_controller)/worlds/$(arg world_name).world"/>
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="false"/>
    <!-- <arg name="gui" value="false"/> -->
  </include>

  <group ns="$(arg mav_name)">
    <include file="$(find geometric_controller)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find geometric_controller)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
    </include>
    

    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
      <rosparam
        command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
      <!-- <remap from="/ardrone/command/motor_speed" to="/vaffanculo"/> -->
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>


  
  <arg name="bag_directory" default="/home/gaetano/Desktop"/>
  <arg name="bag_name" default="geom_controller.bag"/>

  <arg name="topics" default="/ardrone/odometry_sensor1/odometry
  /ardrone/command/roll_pitch_yawrate_thrust
  /ardrone/command/roll_pitch_yawrate_thrust1
  /ardrone/geom_control/psi_des
  /ardrone/geom_control/zb_des
  /ardrone/geom_control/err_p
  /ardrone/geom_control/err_v
  /ardrone/geom_control/err_R
  /ardrone/geom_control/err_W
  /ardrone/geom_control/omega_bb
  /ardrone/geom_control/Rb_des
  /ardrone/geom_control/omega_bb_des
  /ardrone/geom_control/dot_Rb_des
  /ardrone/geom_control/dot_omega_bb_des
  /ardrone/command/motor_speed
  /ardrone/motor_speed
  /ardrone/geom_control/q
  /ardrone/geom_control/dot_q
  /ardrone/geom_control/ddot_q
  /ardrone/ground_truth/imu
  /ardrone/ground_truth/odometry
  /ardrone/geom_controller/apf
  /ardrone/geom_controller/F_rep
  /ardrone/geom_controller/dist"/>



  <!-- Esegui il comando rosbag record con i topic specificati -->
  <node pkg="rosbag" type="record" name="rosbag_record" output="screen" args="-O $(arg bag_directory)/$(arg bag_name) $(arg topics)"/>


  <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find geometric_controller)/ardrone.rviz" required="true" /> -->

</launch>
